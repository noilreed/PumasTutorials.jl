---
title : Building Populations for Simulation
date: `j Date(now())`
---

Load the necessary libraries

```julia
using Pumas, DataFrames
```

In this tutorial you will learn how to build `Population` of subjects each with a
dosing regimen (`events`), `covariates` and `observations`. There are two approaches
to doing this:

* using the `DosageRegimen` constructor followed by `Subject`/`Population` with `covariates`
* construct a `DataFrame` and then use the `read_pumas` function to turn this into a `Population`

Check out the [documentation](https://pumasai.gitlab.io/PumasDocs-jl/basics/doses_subjects_populations/)
on `DosageRegimen`, `read_pumas` and `Subject` for more information. In this tutorial, we do
not show the simulation from a model, but any of these examples below are ready to be simulated
with an appropriate model.

1. A population of 20 subjects receive a dose of **5mg/kg** as an _IV-Infusion_
for a duration of 30 mins (0.5hrs).

We will go _stepwise_ from the above information:
 * First specify the `number of subjects`
 * Write the `dose` in mg/kg
 * Assign weights randomly from `75 to 102` for the 20 subjects
 * Next calculate the dose for each subject by `multiplying` the dose/kg into `Weight`
 * Calculate the `Rate` for each subject by dividing **Dose/Duration**
 * Create a `DataFrame` for the 20 subjects
 * Pass the dataframe to `read_pumas` with `Weight` as covariate
 * You can now simulate using the dosage regimen that you have designed

```julia
n       = 20

#Weight based Dosing
dose_kg = 5
Weight  = rand(75:102, n)
Dose    = Weight .* dose_kg
Rate    = Dose ./ 0.5

#Creating a DataFrame of the population
df1     = DataFrame(id=1:20,
                    amt=Dose, time=0,
                    dv=missing, cmt=1, evid=1,
                    rate=Rate, Weight=Weight)

#Read dataset into Pumas
pop     = read_pumas(df1,
                     covariates=[:Weight],
                     observations=[:dv])
```

2. A population of 3 subjects recieve **three different doses** of a drug as an
_IV-Bolus_ every `8` hours for `1 day`.

 * Subject 1 - Receives a dose of **60mg**
 * Subject 2 - Receives a dose of **45mg**
 * Subject 3 - Receives a dose of **20mg**

```julia
#Build the Dosage Regimens
ev1     = DosageRegimen(60, time=0, cmt=1, ii=8, addl=2)
ev2     = DosageRegimen(45, time=0, cmt=1, ii=8, addl=2)
ev3     = DosageRegimen(20, time=0, cmt=1, ii=8, addl=2)

#Assign each subject to a Dosage Regimen
sub1    = Subject(id=1, events=ev1)
sub2    = Subject(id=2, events=ev2)
sub3    = Subject(id=3, events=ev3)

#Merge 3 subjects to a build a population
pop     = [sub1,sub2,sub3]


# (or)

#Another way to build this similar population is using this single line of code

pop = map((subj, amt) -> Subject(id = subj,
                                 events = DosageRegimen(amt, time = 0, cmt = 1, ii = 8, addl = 2),
                                 covariates = (dose = amt,)),
                                 #observations = tmdd_observations),
                                 1:3, #subject ids
                                 [60, 45, 20] # doses
                                 )
```

3. A total of 4 subjects receive **3 different dosage regimens** at **3 different periods**.
Of the four subjects 1 is healthy and 3 are obese. The weights of the subjects are:
Sub1 - 76kg, Sub2 - 112kg, Sub3 - 145kg, Sub4 - 186kg.

 * Period 1 : IV - 5mg
 * Period 2 : Infusion - 2.5mg over 1 hour
 * Period 3 : Oral - 7.5mg

```julia
n         = 4

#Different doses for each type of adminstration
dose_iv   = repeat([5],n)
dose_inf  = repeat([2.5],n)
dose_oral = repeat([7.5],n)
dose      = [dose_iv;dose_inf;dose_oral]

#Rate for Infusion
rate_inf  = repeat([2.5],n)
rate_zero = repeat([0],n)
rates     = [rate_zero;rate_inf;rate_zero]

#Create different Compartments for IV and Oral
cmt_iv    = repeat([2],8)
cmt_oral  = repeat([1],4)
cmt       = [cmt_iv;cmt_oral]

#Period
period_1  = repeat([1],n)
period_2  = repeat([2],n)
period_3  = repeat([3],n)
Period    = [period_1;period_2;period_3]

#Covariates
Weight    = repeat([76,112,145,186],3)
Obese     = repeat([0,1,1,1],3)

#Create a dataframe of the population
df        = DataFrame(id=repeat([1,2,3,4],3),
            time=0, dv = missing, evid=1, cmt=cmt, amt=dose,
            rate=rates, Period=Period, Weight=Weight, Obese=Obese)

#Read dataset into Pumas
pop       = read_pumas(df,
            observations=[:dv],
            covariates=[:Weight,:Obese])
```

4. A total of 600 subjects receive a dose of either **0.1 mg/kg, 0.3 mg/kg, 1.0 mg/kg, 3.0 mg/kg or 10 mg/kg**
as an _1 hour IV-infusion_ at time=0 (day1) and second dose at time=336 (day 14). The probablity of receiving
the respective doses are _10%, 10%, 10%, 60% and 10%_. The covariates are:

 * Body Weight - Mean = 79.09 and SD = 19.28
 * eGFR - Mean = 78.49 and SD = 21.63
 * Gender - Male(66%) and Female(33%)

```julia
n             = 600

#Doses studied
dose_kg       = [0.1, 0.3, 1.0, 3.0, 10]
dosegrps_prob = rand(Categorical([0.10, 0.10, 0.10, 0.60, 0.10]),n)

#Covariates

#Weight - Mean  = 79.09 sd = (19.28)
bw            = Normal(79.09, 19.28)
bwt           = rand(bw, n)

#eGFR -  Mean  = 78.49 sd = (21.63)
egfr          = Normal(78.49, 21.63)
gfr           = rand(egfr, n)

# Gender Male (66%) Female (33%)
pmale         = 0.66
ismale        = rand(Binomial(1,pmale), n)

#For First Dose
df1           = DataFrame(id = 1:600, time=0,
                evid=1, cmt = 1, dv = missing,
                Weight=bwt, eGFR=gfr, Sex=ismale,
                dose = dose_kg[dosegrps_prob])

df1[!, :amt]  .= df1.Weight .* df1.dose
df1[!, :rate] .= df1.amt

#For Second dose
df2            = copy(df1)
df2[!,:time]  .= 336
df3            = vcat(df1,df2)

#Sort dose times
sort!(df3, [:id,:time])

#Read dataset into Pumas
pop            = read_pumas(df3, covariates=[:Weight, :eGFR, :Sex])
```

5. A population of 100 subjects receives a dose of **2000 mcg** as an _IV-Infusion_ over
10 mins at time=0. The covariates are weight and age assigned randomly.

```julia
# Dosage Regimen
ev1     = DosageRegimen(2000, time=0, duration=10/60, cmt=1)

# Covarites; Weight & Age
covar() = (Weight = rand(26:124), Age = rand(21:74))

# Build a Population
pop     = map(i -> Subject(id=i, events=ev1, covariates=covar()),1:100)
```

6. A population of 36 patients receive doses based on their weight category
 * 12 patients weighing between 4.2 - 7 kg receive a dose of 80 mg Q24hrs for 3 days
 * 12 patients weighing between 7 - 13 kg receive a dose of 160 mg Q24hrs for 3 days
 * 12 patients weighing between 13 - 18 kg receive a dose of 320 mg Q24hrs for 3 days

```julia
ev1   = DosageRegimen(80,time=0,cmt=1,ii=24,addl=2)
pop1  = map(i -> Subject(id=i, events=ev1, covariates=(Weight=rand(4.2:7),)), 1:12)
ev2   = DosageRegimen(160,time=0,cmt=1,ii=24,addl=2)
pop2  = map(i -> Subject(id=i, events=ev2, covariates=(Weight=rand(7:13),)), 13:24)
ev3   = DosageRegimen(320,time=0,cmt=1,ii=24,addl=2)
pop3  = map(i -> Subject(id=i, events=ev3, covariates=(Weight=rand(13:18),)), 25:36)

#Concatenate the Population
pop   = [pop1;pop2;pop3]
```

7. A population of 20 subjects receives an _IV-Bolus_ dose of **20mg/kg**. The weights
are assigned randomly between 45 and 78.

```julia
ev1  = DosageRegimen(20, time=0, cmt=1)
pop1 = map(i -> Subject(id=i, events=ev1, covariates=(Weight=rand(45:78),)), 1:20)
df1  = DataFrame(pop1)

#Convert the dose into mg by multiplying by respective weight
df1[!, :amt] = df1.Weight .* df1.amt
df1[!, :dv] .= missing

#Read dataset into Pumas
pop   = read_pumas(df1, observations=[:dv], covariates=[:Weight])
```

8. A _fixed dose combination_ of **drug A (100 mg)** and **drug B (200 mg)** is
given once-daily orally for 3 days.

 * Subjects weighing < 50kg are given `1.5 tablets` (150mg)
 * Subjects weighing 50-60 kgs are given `2 tablets` (200mg)
 * Subjects weighing >60 kgs are given `2.5 tablets` (250mg)

Note: We have conc of only drug A

```julia
ev1  = DosageRegimen(150, time=0, cmt=1, addl=2, ii=24)
pop1 = map(i -> Subject(id=i, events=ev1, covariates=(Weights=rand(35:49.9),)),1:10)
ev2  = DosageRegimen(200, time=0, cmt=1, addl=2, ii=24)
pop2 = map(i -> Subject(id=i, events=ev2, covariates=(Weights=rand(50:59.9),)),11:20)
ev3  = DosageRegimen(250, time=0, cmt=1, addl=2, ii=24)
pop3 = map(i -> Subject(id=1, events=ev3, covariates=(Weights=rand(60:80),)),1:10)

#Concatenate the Population
pop  = [pop1;pop2;pop3]
```

9. A total of 40 patients receive a drug as follows
 * 20 obese patients receive an _IV-Infusion_ of **12.5 mg/kg/day** at the `rate of 600mg/hr`. The dose is _capped_ at max **2500mg/day**.
 * 20 non-obese patients receive an _IV-Infusion_ of **1000mg/day** at the `rate of 600mg/hr`.

```julia
# Obese Individuals
ev1   = DosageRegimen(12.5, time=0, cmt=1, rate=600)
pop1  = map(i -> Subject(id=i, events=ev1, covariates=(Weight=rand(90:230), Obese=1)),1:20)
df1   = DataFrame(pop1)
df1[!,:amt] .= df1[:,:amt] .* df1[:,:Weight]
df1[!,:amt] .= ifelse.(df1.amt .> 2500, 2500, df1.amt)
df1[!, :dv] .= missing

# Non-Obese Individuals
ev2   = DosageRegimen(1000, time=0, cmt=1, rate=600)
pop2  = map(i -> Subject(id=i, events=ev2, covariates=(Weight=rand(60:85), Obese=0)),21:40)
df2   = DataFrame(pop2)
df2[!, :dv] .= missing

# Concatenate the Population
df    = vcat(df1,df2)

#Read dataset into Pumas
pop   = read_pumas(df, covariates=[:Weight, :Obese])
```


10. In this example, we will build a population of 150 patients for a
**_disease progression model_** tested on `three treatment groups` as follows:

 * Group A - A population of `50 patients` receives _Drug A_
 * Group B - A population of `50 patients` receives _Drug B_
 * Group C - A population of `50 patients` receives _Drug C_

Note: There is **no event data** as we are modelling the PD data. Each _Treatment Group_ is a `Covariate`.

```julia
# Group A:
df1   = DataFrame(map(i -> (id=i, time=0, trtgrp_A = 1, trtgrp_B = 0, trtgrp_C=0, dv_pd=missing), 1:50))
pop1  = read_pumas(df1, observations=[:dv_pd], covariates=[:trtgrp_A, :trtgrp_B, :trtgrp_C], event_data=false)

# Group B:
df2   = DataFrame(map(i -> (id=i, time=0, trtgrp_A = 0, trtgrp_B = 1, trtgrp_C=0, dv_pd=missing), 51:100))
pop2  = read_pumas(df2, observations=[:dv_pd], covariates=[:trtgrp_A, :trtgrp_B, :trtgrp_C], event_data=false)

# Group C:
df3   = DataFrame(map(i -> (id=i, time=0, trtgrp_A = 0, trtgrp_B = 0, trtgrp_C=1, dv_pd=missing), 101:150))
pop3  = read_pumas(df3, observations=[:dv_pd], covariates=[:trtgrp_A, :trtgrp_B, :trtgrp_C], event_data=false)
```


11. A total of 30 patients receive various doses as follows:
 * Group 1 (Normal Renal Functions) = **7mg/kg** `Q24` hrs with `11` additional doses and the `CrCl` changes at `0 & 144 hours`
 * Group 2 (Medium Renal Functions) = **7mg/kg** `Q36` hrs with `7` additional doses and the `CrCl` changes at `0 & 144 hours`
 * Group 3 (Poor Renal Functions) = **7mg/kg** `Q48` hrs with `5` additional doses and the `CrCl` changes at `0 & 144 hours`

```julia
# Dosage Regimen for various groups
ev1 = DosageRegimen(7, time=0, cmt=1, addl=11, ii=24)
ev2 = DosageRegimen(7, time=0, cmt=1, addl=7, ii=36)
ev3 = DosageRegimen(7, time=0, cmt=1, addl=5, ii=48)

# Covariates
cvs_normal() = (Weight=rand(60:120), CrCl = repeat(rand(72:120,2)))
cvs_medium() = (Weight=rand(60:120), CrCl = repeat(rand(30:69,2)))
cvs_poor()   = (Weight=rand(60:120), CrCl = repeat(rand(15:29,2)))

# Time varying Covariate
cvstimes()   = (Weight=[0], CrCl = [0,144])

# Building the Population
pop1 = map(i -> Subject(id=i, events=ev1,
                        covariates=cvs_normal(),
                        covariates_time=cvstimes(),
                        covariates_direction=:left),1:10)
pop2 = map(i -> Subject(id=i, events=ev2,
                        covariates=cvs_medium(),
                        covariates_time=cvstimes(),
                        covariates_direction=:left),11:20)
pop3 = map(i -> Subject(id=i, events=ev3,
                        covariates=cvs_poor(),
                        covariates_time=cvstimes(),
                        covariates_direction=:left),21:30)
pop_all = [pop1;pop2;pop3]
df1  = DataFrame(pop_all)

# Adjust dose based on weight
df1[!,:amt] .= df1.amt .* df1.Weight
df1[!,:dv] .= missing

#Read dataset into Pumas
pop = read_pumas(df1, covariates=[:Weight, :CrCl])
```

12. A population of 1000 subjects receive an _IV-Infusion_ of **5mg/kg** for a duration of `0.5 hrs`.

```julia
#Build Dosage Regimen
ev1 = DosageRegimen(5, time=0, cmt=1)

#Build a Population
pop1 = map(i -> Subject(id=i, events=ev1, covariates=(MDRD=rand(77:171), Weight=rand(55:110))), 1:1000)
df1  = DataFrame(pop1)

#Calculate the Weight based dose
df1[!, :amt]  .= df1.amt .* df1.Weight
df1[!, :rate] .= df1.amt ./ 0.5
df1[!, :dv] .= missing

#Read dataset into Pumas
pop  = read_pumas(df1, observations=[:dv], covariates=[:MDRD,:Weight])
```

13. A population of 20 subjects receive an _IV-Infusion_ of **700000mcg** over `12 hours`. The covariates are:
 * Billirubin (Tbil) = 100 - 1200
 * Creatine Clearance (CrCl) = 30 - 120
 * CYP1A2 = 0 : Normal , 1 : Poor Metabolizer
 * Alanine Transaminase (ALT) = 7 - 90
 * Lactate Dehydrigenase (LDH) = 140 - 400

```julia
#Dosage Regimen
ev1 = DosageRegimen(700000, time=0, cmt=1, duration=12)

#Covariates
covariate() = (Tbil   = rand(100:1200),
               CRCL   = rand(30:120),
               CYP1A2 = rand(0:1),
               ALT    = rand(7:90),
               LDH    = rand(140:400))

#Build a Population
pop  = map(i -> Subject(id=i, events=ev1, covariates=covariate()), 1:20)
```

14. A population of 30 subjects receive **3 cycles** of **3 different regimens**, with each cycle as a covariate
 * Regimen 1 - A dose of **80 mg** on-period: `14 days` and off-period: `7 days` (no drug) [Total 3 weeks]
 * Regimen 2 - A dose of **160 mg** mg on-period: `4 days` and off-period: `3 days` (no drug) [Total 3 weeks]
 * Regimen 3 - A dose of **200 mg** on-period: `5 days` and off-period: `2 days` (no drug) [Total 3 weeks]

```julia
#Cycle 1
ev1  = DosageRegimen(80, time=0, cmt=1, addl=13, ii=24)

#Cycle 2
ev2  = DosageRegimen(160, time=[504,672,840], addl=3, ii=24)

#Cycle 3
ev3  = DosageRegimen(200, time=[1008,1176,1344], addl=4, ii=24)

#Merge all events to complete all three cycles
evs  = DosageRegimen(ev1,ev2,ev3)

#Covariates

covariates()     = (Weight=rand(67:95), Cycle=[1,2,3])
covariate_time() = (Weight=[0], Cycle=[0,504,1008])

#Build a Population
pop1 = map(i -> Subject(id=i, events=evs,
                    covariates=covariates(),
                    covariates_time=covariate_time(),
                    covariates_direction=:left), 1:20)

df1  = DataFrame(pop1)
df1[!, :dv] .= missing

#Read dataset into Pumas
pop  = read_pumas(df1, covariates=[:Weight,:Cycle])
```

15. In an _in-vitro_ study of `2 drugs`, _various concentrations_ are tested for both the compounds as follows.
 * Compound A - 0, 0.009, 0.019, 0.03, 0.7, 1.5, 3.125, 6.125, 12.5, 25, 50, 100
 * Compound B - 0, 0.009, 0.019, 0.03, 0.07, 0.15, 0.312, 0.625, 1.25, 2.5, 5, 10

**Note:**
 * Both the compounds have _different parameters_

```julia
#Parameters
param_cmpA =   ( tvλ0 = 0.0283, tvn0 = 1313.1, tvk1 = 0.293, tvk2 = 0.0726 )
param_cmpB =   ( tvλ0 = 0.0292, tvn0 = 1016.7, tvk1 = 0.416, tvk2 = 0.0112 )

#Concentrations tested for the Compounds
conc_compA = [0, 0.009, 0.019, 0.03, 0.7, 1.5, 3.125, 6.125, 12.5, 25, 50, 100]
conc_compB = [0, 0.009, 0.019, 0.03, 0.07, 0.15, 0.312, 0.625, 1.25, 2.5, 5, 10]


drugs      = repeat(["Comp_A","Comp_B"], inner=length(conc_compA))
concs      = vcat(conc_compA, conc_compB)
#param     = vcat(param_cmpA,param_cmpB)
#param     = repeat(param, inner=length(conc_compA))

#Build a Population
pop        = Population(map(i -> Subject(id=i, event_data=false,
                                 covariates=(conc = concs[i], drug=drugs[i])), 1:length(concs)))

#Run Simulation using the Model
#sim       = map(((subject, paramᵢ),) -> simobs(model, subject, paramᵢ, obstimes=0:6:72), zip(pop, param))
#df_sim    = DataFrame(sim)
```

16. A population of 20 subjects receive a _Loading Dose_ of **0.1mg/kg** and and a _Maintenance Dose_ of **14.4 mg/kg** for `12 hours`. The covariates are:

 * Weight
 * C-Reactive Protein (CRP)
 * Inter-Ocassion (OCC)

```julia
#Dosage Regimen
wt  = rand(42.5:63.5,60)
dose_by_weight(wt) = DosageRegimen([0.1*wt,14.4*wt], time=0, cmt=1, rate=[0,0.1*wt])

#Covariate Times
covariates_time() = (Weight = [0], CRP = [0], OCC = [0,24,48,72,96,120])

#Build a Population
pop = map(i -> Subject(id=i, events=dose_by_weight(wt[i]),
                       covariates= (Weight=wt[i], CRP = rand(1:3.5), OCC = [1,2,3,4,5,6]),
                       covariates_time=covariates_time()),1:20)
```

17. In this `example` you will learn how to **simulate data** if you have **individual parameters** of each subject.

**Note:-**
 * In this case _each subject_ receives a `different dose`

```julia
#Parameters for each subject
par1  = (tvCl = 3.2, tvVc = 6.8)
par2  = (tvCl = 1.5, tvVc = 5.9)
par3  = (tvCl = 2.2, tvVc = 8.8)
par4  = (tvCl = 0.5, tvVc = 3.9)
par5  = (tvCl = 3.8, tvVc = 6.4)

param = vcat(par1,par2,par3,par4,par5)

#Build Dosage Regimen for each Subject
dose = [22.5, 52.5, 40.5, 40, 50.5]
dose_ind(x) = DosageRegimen(dose[x], time=0, cmt=1)

#Build a Population o the 5 Subjects
pop  = map(i -> Subject(id=i, events=dose_ind(i)), 1:5)
df   = DataFrame(pop)

#Simulate using the sim_obs function
#sim    = map(((subject, paramᵢ),) -> simobs(model, subject, paramᵢ, obstimes=0:1:72), zip(pop, param))
#df_sim = DataFrame(sim)
```
