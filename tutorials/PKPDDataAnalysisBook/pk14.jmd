---
title : Exercise PK14 - Multi-compartment oral data
date: `j Date(now())`
---

```julia; echo = false
using Dates
```

### Background

  * Structural model        - Two compartment linear elimination and first order absorption with lagtime
  * Route of administration - Oral
  * Dosage regimens         - 23,158 μg single dose
  * Subject                 - 1

![Two comartment oral dosing](https://user-images.githubusercontent.com/62241298/78966873-86dbab80-7b1e-11ea-84dd-05e7ad936ff1.png)

### Learning Outcome

In this model, fitting of po data will help you to understand the disposition of
 drug following lag time in absorption

### Objectives

In this tutorial, you will learn how to build two compartment model with lagtime
 in oral absorption and to simulate the model for a single subject.

### Libraries

call the "necessary" libraries to get start.

```julia
using Pumas
using Plots
using CSV
using StatsPlots
using Random
```

### Model

In this two compartment model, we administer dose to Depot and Central compartment.

```julia
pk_14           = @model begin
  @param begin
    tvka        ∈ RealDomain(lower=0)
    tvvc        ∈ RealDomain(lower=0)
    tvvp        ∈ RealDomain(lower=0)
    tvcl        ∈ RealDomain(lower=0)
    tvq         ∈ RealDomain(lower=0)
    tvlag       ∈ RealDomain(lower=0)
    Ω           ∈ PDiagDomain(4)
    σ²_prop     ∈ RealDomain(lower=0)
  end

  @random begin
    η           ~ MvNormal(Ω)
  end

  @pre begin
    Ka          = tvka * exp(η[1])
    Vc          = tvvc * exp(η[2])
    Vp          = tvvp * exp(η[3])
    Cl          = tvcl * exp(η[4])
    Q           = tvq
    lags        = (Depot = tvlag,)
  end

  @dynamics begin
    Depot'      = -Ka*Depot
    Central'    =  Ka*Depot - (Cl/Vc)*Central + (Q/Vp)*Peripheral - (Q/Vc)*Central
    Peripheral' =  (Q/Vc)*Central - (Q/Vp)*Peripheral
  end

  @derived begin
    cp          = @. Central/Vc
    dv          ~ @. Normal(cp, sqrt(cp^2*σ²_prop))
  end
end
```

### Parameters

Parameters provided for simulation. tv represents the typical value for parameters.

 * Ka - Absorption rate constant (hr⁻¹)
 * Vc - Volume of central compartment (L)
 * Vp - Volume of pepheral Compartmental (L)
 * Cl - Clearance (L/hr)
 * Q - Intercompartmental clearance (L/hr)
 * lag - Absorption lagtime (hr)

```julia
param = ( tvka    = 10,
          tvvc    = 82.95,
          tvcl    = 54.87,
          tvq     = 10.55,
          tvlag   = 0.078,
          tvvp    = 107.9,
          Ω       = Diagonal([0.0,0.0,0.0,0.0]),
          σ²_prop = 0.0125)
```

### Dosage Regimen

Single Subject receives an `oral` dose of **23158 μg** at `time=0`

```julia
ev1  = DosageRegimen(23158, time=0, cmt=1)
sub1 = Subject(id=1, events=ev1)
```

### Simulation

Lets simulate plasma concentration after oral dosing.

```julia; results="hidden"
Random.seed!(123)
sim_sub1 = simobs(pk_14,sub1,param,obstimes=0.08:0.01:25)
```

### Dataframe & Plot

Convert to a DataFrame for plotting.

```julia
df1    = DataFrame(sim_sub1)
df1_dv = filter(x -> x.time in [0.08,0.16,0.25,0.5,1,1.5,2,3,4,6,8,12,24,25], df1)

@df df1 plot(:time, :cp, yaxis = :log,
              label="Pred - Conc", xlabel="Time (hr)", ylabel="Concentration (ug/L)",
              title="Plasma Concentration vs Time", linewidth=3,
              xticks=[0,5,10,15,20,25], yticks=[0.1,1,10,100,1000], ylims=(0.1,1000), xlims=(-0.2,30))
@df df1_dv scatter!(:time, :dv, label="Obs - Conc")
```


```julia; echo=false, eval=false
par   = ( tvka    = 10,
          tvvc    = 82.95,
          tvcl    = 54.87,
          tvq     = 10.55,
          tvlag   = 0.078,
          tvvp    = 107.9,
          Ω       = Diagonal([0.0152,0.0426,0.092,0.0158]),
          σ²_prop = 0.03)

ev1   = DosageRegimen(23158, time=0, cmt=1)
pop   = map(i -> Subject(id=i, events=ev1), 1:68)

Random.seed!(1234)
sim_pop = simobs(pk_14, pop, par, obstimes=[0.08,0.16,0.25,0.5,1,1.5,2,3,4,6,8,12,24,25])
plot(sim_pop, yaxis=:log)

df_sim = DataFrame(sim_pop)

CSV.write("./data/generated/pk_14.csv", df_sim)
```
