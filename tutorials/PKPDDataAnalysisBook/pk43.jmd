---
title: Exercise PK43 - Multiple absorption routes
date: `j Date(now())`
---

```julia; echo = false
using Dates
```

### Background

  * Structural model        - 1 compartment linear elimination with first order absorption
  * Route of administration - Sublingual
  * Dosage Regimen          - 2mg Sublingual dose
  * Number of Subjects      - 1

![pk43](https://user-images.githubusercontent.com/62236414/81821826-f7c41800-954f-11ea-8aa5-6f0abc9b40d1.png)

### Learning Outcome

In this model, Multiple absorption routes helps in understanding absorption of
sublingually administered dose partly from buccal cavity and partly from gatrointestinal tract

### Objectives

In this model you will learn how to write differential equation model for a drug
that is partly absorbed from buccal and partly from GI and simulate for a single subject.

### Libraries

call the "necessary" libraries to get start.

```julia
using Pumas
using Plots
using StatsPlots
using CSV
using Random
```

### Model

In this one compartment model, we administer dose Sublingually.

```julia
pk_43        = @model begin
  @param begin
    tvkar    ∈ RealDomain(lower=0)
    tvkad    ∈ RealDomain(lower=0)
    tvv      ∈ RealDomain(lower=0)
    tvlag    ∈ RealDomain(lower=0)
    tvfa     ∈ RealDomain(lower=0)
    tvk      ∈ RealDomain(lower=0)
    Ω        ∈ PDiagDomain(4)
    σ_add    ∈ RealDomain(lower=0)
  end

  @random begin
    η        ~ MvNormal(Ω)
  end

  @pre begin
    KaR      = tvkar * exp(η[1])
    KaD      = tvkad * exp(η[2])
    V        = tvv * exp(η[3])
    K        = tvk * exp(η[4])
    bioav    = (Buccal=tvfa, Gi= 1-tvfa)
    lags     = (Gi=tvlag,)
  end

  @dynamics begin
    Buccal'  = -KaR*Buccal
    Gi'      = -KaD*Gi
    Central' =  KaR*Buccal + KaD*Gi - K*Central
  end

  @derived begin
    cp       = @. Central/V
    dv       ~ @. Normal(cp, σ_add)
  end
end
```

### Parameters

Parameters provided for simulation. tv represents the typical value for parameters.

  * Vc - Volume of Central Compartment (L)
  * K - Elimination rate constant (hr⁻⅟)
  * Kar - Absorption rate constant(rapid from buccal) (hr⁻⅟)
  * Kad - Absorption rate constant(delayed from GI) (hr⁻⅟)
  * Fa - Fraction of drug absorbed
  * lags - Lagtime (hr)
  * Ω - Between Subject Variability
  * σ - Residual error

```julia
param = (tvkar  = 7.62369,
         tvkad  = 1.0751,
         tvv    = 20.6274,
         tvk    = 0.0886931,
         tvfa   = 0.515023,
         tvlag  = 2.29614,
         Ω      = Diagonal([0.0,0.0,0.0,0.0]),
         σ_add  = 0.86145)
```

### DosageRegimen

Single subject receiving **2mg** dose given orally (absorbed - Sublingually and remaining from the Gut).

```julia
ev1  = DosageRegimen(2000, time=0, cmt=[1,2])
sub1 = Subject(id=1, events=ev1)
```

### Simulation

Lets simulate plasma concentration with specific observation times after Sublingual
dose considering multiple absorption routes.

```julia; results="hidden"
Random.seed!(123)
sim_sub1 = simobs(pk_43, sub1, param, obstimes=0.00:0.01:24)
df1      = DataFrame(sim_sub1)
```

### Dataframe and Plot

Simulated data is saved as dataframe and used for plotting.

```julia
df1_dv = filter(x -> x.time in [0.1,0.15,0.25,0.5,0.75,0.8,1,1.25,1.5,2,3,4,5,6,8,12,24], df1)

@df df1 plot(:time, :cp,
            title="Multiple absorption routes",label="Pred - Conc",
            xlabel="Time(hr)",ylabel="Conc(mcg/l)", linewidth=3,
            xticks=[0,5,10,15,20,25], xlim=(-0.1,25), yticks=[10,20,30,40,50,60,70,80], ylim=(10,80))
@df df1_dv scatter!(:time, :dv, label="Obs - Conc")
```


```julia, echo=false, eval=false
par = (tvkar  = 7.62369,
       tvkad  = 1.0751,
       tvv    = 20.6274,
       tvk    = 0.0886931,
       tvfa   = 0.515023,
       tvlag  = 2.29614,
       Ω      = Diagonal([0.0635,0.0125,0.03651,0.0198]),
       σ_add  = 1.86145)

ev1  = DosageRegimen(2000, time=0, cmt=[1,2])
pop  = map(i -> Subject(id=i, events=ev1), 1:68)

Random.seed!(1234)
sim_pop = simobs(pk_43, pop, par, obstimes=[0.1,0.15,0.25,0.5,0.75,0.8,1,1.25,1.5,2,3,4,5,6,8,12,24])
plot(sim_pop)

df_sim  = DataFrame(sim_pop)

CSV.write("./data/generated/pk_43.csv", df_sim)
```
