image: "juliacomputing/juliapro:v1.6.0-1"

variables:
  JULIA_PKG_SERVER: pumasai.juliahub.com
  PRIVATE_REGISTRY_NAME: PumasRegistry
  PRIVATE_REGISTRY_UUID: 2207cf11-c0bb-4826-96c6-61cddfb0e7e8
  REMOVE_JULIACOMPUTINGREGISTRY: "true"
  # GitLab requires that the cache path is insde the project
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia/"

cache:
  paths:
    - .julia/compiled/
    - html/

test-pumastutorials:
  stage: test
  before_script:
    - apt-get --allow-releaseinfo-change update -yqq
    - apt-get install -yqq texlive-xetex
  script:
    - julia -e 'using InteractiveUtils;
                versioninfo()'
    - julia --depwarn=error --project -e 'using Pkg;
          Pkg.test();'
  interruptible: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
      when: never
    - if: '$CI_COMMIT_BRANCH || $CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "external"'

upstream:
  stage: test
  before_script:
    - apt-get --allow-releaseinfo-change update -yqq
    - apt-get install -y zip unzip
  script:
    - echo $UPSTREAM_PROJECT
    - echo $UPSTREAM_PROJECT_ID
    - mkdir -p html
    - mkdir -p html/$UPSTREAM_PROJECT
    - 'curl --location --output $UPSTREAM_PROJECT.zip --fail --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/$UPSTREAM_PROJECT_ID/jobs/artifacts/main/download?job=test"'
    - unzip $UPSTREAM_PROJECT.zip -d $UPSTREAM_PROJECT
    - cp -r $UPSTREAM_PROJECT/output/* html/$UPSTREAM_PROJECT
    - ls html/$UPSTREAM_PROJECT
  rules:
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'

pages:
  stage: deploy
  script:
    - mkdir public/
    - cp docs/index.html public/
    - cp docs/resources.css public/
    - cp docs/CNAME public/
    - cp -r html public/
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
    - if: '$CI_COMMIT_TAG'
